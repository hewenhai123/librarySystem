const mongoose = require('mongoose');const async = require('async');const mongoDB = 'mongodb://127.0.0.1:27017/fuwu2';//数据哭地址const Schema = mongoose.Schema; //获取模型mongoose.connect(mongoDB); //连接数据库const db = mongoose.connection; //就是在获取集合db.on("connected", () => {    console.log("MongoDB connection success " + mongoDB)});db.on('error', () => {    console.log("MongoDB connection errer")});const hTypeSchema = new Schema({    typeName: {type: String, required: true}});const floorSchema=new Schema({   floor:{type:String,required: true}});const decorationSchema=new Schema({    decoration:{type:String,required:true}});const hTypeModel = mongoose.model('htype', hTypeSchema);const floorModel=mongoose.model('floor',floorSchema);const decorationModel=mongoose.model('decoration',decorationSchema);function createHtype(typeName) {    let htype = new hTypeModel({        typeName: typeName    });    htype.save(function (err) {        if (err) {            console.log(err)        } else {            console.log("保存成功" + typeName);        }    })}function saveHtype() {    async.parallel([        ()=>{createHtype("一室")},        ()=>{ createHtype("两室")},        ()=>{ createHtype("三室")},        ()=>{ createHtype("四室")},        ()=>{ createHtype("五室")},    ]);}function createFloor(floor){    console.log("SDfasds")    let floorNum=new floorModel({        floor:floor    });    floorNum.save((err)=>{        if(err){            console.log(err)        }    })}function saveFloor(){ async.parallel([     ()=>{createFloor("1")},     ()=>{createFloor("2")},     ()=>{createFloor("3")},     ()=>{createFloor("4")},     ()=>{createFloor("5")},     ()=>{createFloor("6")},     ()=>{createFloor("7")},     ()=>{createFloor("8")},     ()=>{createFloor("9")},     ()=>{createFloor("10")}, ],function (err) {     if(err){         console.log("保存错误");         console.log(err)     }else{         console.log("保存成功")     } })}function createDecorationModel(decoration){    let decorationVal=new decorationModel({        decoration:decoration    });    decorationVal.save((err)=>{        if(err){            consoe.log(err);        }    })}function saveDecoration(){    async.parallel([        ()=>{createDecorationModel("精装修")},        ()=>{createDecorationModel("普通装修")},        ()=>{createDecorationModel("模胚房")},    ],(err)=>{        if(err){            console.log(err)        }    })}async.parallel([    ()=>{saveHtype();},    ()=>{saveFloor();},    ()=>{saveDecoration();}],(err)=>{    if(err){        console.log(err)    }});