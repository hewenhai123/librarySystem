const mongoose = require('mongoose');const async = require('async');const mongoDB = 'mongodb://127.0.0.1:27017/fuwu2';//数据哭地址const Schema = mongoose.Schema; //获取模型mongoose.connect(mongoDB); //连接数据库const db = mongoose.connection; //就是在获取集合db.on("connected", () => {    console.log("MongoDB connection success " + mongoDB)});db.on('error', () => {    console.log("MongoDB connection errer")});const hTypeSchema = new Schema({    typeName: {type: String, required: true}});const floorSchema=new Schema({   floor:{type:String,required: true}});const decorationSchema=new Schema({    decoration:{type:String,required:true}});const citySchema=new Schema({    city:{type:String,required:true},});const countySchema=new Schema({    county:{type:String,required:true},    city:{type:Schema.Types.ObjectId,required:true}    // city:{type:String,required:true}});const userSchema=new Schema({    uname:{type:String,required:true},    urname:{type:String,required:true},    tel:{type:String,required:true},    qq:{type:String,required:true},    address:{type:String,required:true},    sex:{type:String,required:true},    password:{type:String,required:true},});const listIngSchema=new Schema({    title:{type:String,required:true},    desc:{type:String,required:true},    address:{type:String,required:true},    area:{type:String,required:true},    price:{type:String,required:true},    uname:{type:Schema.Types.ObjectId,required:true},    htype:{type:Schema.Types.ObjectId,required:true},    decorations:{type:Schema.Types.ObjectId,required:true},    floor:{type:Schema.Types.ObjectId,required:true}});const hTypeModel = mongoose.model('htype', hTypeSchema);const floorModel=mongoose.model('floor',floorSchema);const decorationModel=mongoose.model('decoration',decorationSchema);const cityModel=mongoose.model('city',citySchema);const countyModel=mongoose.model('county',countySchema);const userModel=mongoose.model('user',userSchema);const listIngModel=mongoose.model('house',listIngSchema);var cityList=[];var nameList= ["张吉惟", "林国瑞", "林玟书", "林雅南", "江奕云", "刘柏宏", "阮建安", "林子帆", "夏志豪", "吉茹定", "李中冰", "黄文隆", "谢彦文", "傅智翔", "洪振霞", "刘姿婷", "荣姿康", "吕致盈", "方一强", "黎芸贵", "郑伊雯", "雷进宝", "吴美隆", "吴心真", "王美珠", "郭芳天", "李雅惠", "陈文婷", "曹敏侑", "王依婷", "陈婉璇", "吴美玉", "蔡依婷", "郑昌梦", "林家纶", "黄丽昆", "李育泉", "黄芸欢", "吴韵如", "李肇芬", "卢木仲", "李成白", "方兆玉", "刘翊惠"];var nickname=["吉惟", "国瑞", "玟书", "雅南", "奕云", "柏宏", "建安", "子帆", "志豪", "茹定", "中冰", "文隆", "彦文", "智翔", "振霞", "姿婷", "姿康", "致盈", "一强", "芸贵", "伊雯", "进宝", "美隆", "心真", "美珠", "芳天", "雅惠", "文婷", "敏侑", "依婷", "婉璇", "美玉", "依婷", "昌梦", "家纶", "丽昆", "育泉", "芸欢", "韵如", "肇芬", "木仲", "成白", "兆玉", "翊惠"];var tel=["158","137","133","139","138"];var county=["通州区","朝阳区","海定区","东城区","西城区","丰台区","大兴区","亦庄区","顺义区","怀柔区","平谷区","昌平区","密云区","石景山区","房山区","延庆区"];var sex=["男","女"];function random(n,m){    return Math.round(Math.random()*(m-n)+n)}function createHtype(typeName) {    let htype = new hTypeModel({        typeName: typeName    });    htype.save(function (err) {        if (err) {            console.log(err)        } else {            console.log("保存成功" + typeName);        }    })}function saveHtype() {    async.parallel([        ()=>{createHtype("一室")},        ()=>{ createHtype("两室")},        ()=>{ createHtype("三室")},        ()=>{ createHtype("四室")},        ()=>{ createHtype("五室")},    ]);}function createFloor(floor){    console.log("SDfasds")    let floorNum=new floorModel({        floor:floor    });    floorNum.save((err)=>{        if(err){            console.log(err)        }    })}function saveFloor(){ async.parallel([     ()=>{createFloor("底层")},     ()=>{createFloor("低楼层")},     ()=>{createFloor("中楼层")},     ()=>{createFloor("高楼层")},     ()=>{createFloor("顶层")}, ],function (err) {     if(err){         console.log("保存错误");         console.log(err)     }else{         console.log("保存成功")     } })}function createDecorationModel(decoration){    let decorationVal=new decorationModel({        decoration:decoration    });    decorationVal.save((err)=>{        if(err){            consoe.log(err);        }    })}function saveDecoration(){    async.parallel([        ()=>{createDecorationModel("精装修")},        ()=>{createDecorationModel("普通装修")},        ()=>{createDecorationModel("模胚房")},    ],(err)=>{        if(err){            console.log(err)        }    })}function creteCity(name){    let city=new cityModel({        city: name    });    city.save((err)=>{        if(err){            console.log(err)        }        cityList.push(city);        // console.log(cityList)    })}function saveCity(){    async.parallel([        (callback)=>{creteCity("北京"),callback},        (callback)=>{creteCity("上海"),callback},    ],(er)=>{ if(er){     console.log(er) }    })}function createCounty(name,city){    let county=new countyModel({        county:name,        city:city    });    county.save((err)=>{        if(err){            console.log(err)        }else{            console.log("保存成功")        }    })}function saveCounty(){    console.log("Dfasdfas")    console.log(cityList);let city=mongoose.Types.ObjectId("5c91b42ae4b1742c0cbe995d");console.log(city)// let city=cityList[0]._id;    async.parallel([            ()=>{createCounty("通州区",city)},            ()=>{createCounty("朝阳区",city)},            ()=>{createCounty("海定区",city)},            ()=>{createCounty("东城区",city)},            ()=>{createCounty("西城区",city)},            ()=>{createCounty("丰台区",city)},            ()=>{createCounty("石景山区",city)},            ()=>{createCounty("昌平区",city)},            ()=>{createCounty("大兴区",city)},            ()=>{createCounty("亦庄区",city)},            ()=>{createCounty("顺义区",city)},            ()=>{createCounty("房山区",city)},            ()=>{createCounty("门头沟区",city)},            ()=>{createCounty("平谷区",city)},            ()=>{createCounty("怀柔区",city)},            ()=>{createCounty("密云区",city)},            ()=>{createCounty("延庆区",city)},        ],(er)=>{            if(er){                console.log(er)            }        })}function createUser(uname,urname,tel,qq,address,sex,password){    let user=new userModel({        uname:uname,        urname:urname,        tel:tel,        qq:qq,        address:address,        sex:sex,        password: password    });    user.save((er)=>{        if(er){            console.log("错误")        }    })}function saveUser() { // async.series([ //     (callback)=>{createUser("张雨","张雨绮","15810801764","154433298","北京市通州区","女","123456");callback()}, //     (callback)=>{createUser("张耀","张耀扬","15810801432","187789298","北京市通州区","男","123456");callback()}, //     (callback)=>{createUser("叶青","叶青青","15810802134","110986778","北京市通州区","女","123456");callback()}, //     (callback)=>{createUser("韩芬","韩再芬","158103452","112324555","北京市通州区","女","123456");callback()}, //     (callback)=>{createUser("王飞","王志飞","158165654","435543298","北京市通州区","男","123456");callback()}, //     (callback)=>{createUser("迈克尔","迈克尔·拉帕波特","158103434","234222298","北京市通州区","男","123456");callback()}, // ],(er,res)=>{ //     if(er){ //         console.log(er) //     } // })    for(let i=0;i<nameList.length;i++){        createUser(            nickname[i],            nameList[i],            tel[random(0,4)]+random(1111111,9999999),            random(11111111,9999999999),            "北京市"+county[random(0,15)],            sex[random(0,1)],            random(111111,9999999999)        )    }}function saveHouse(title,desc,address,area,price,uname,htype,decorations,floor){    console.log(title,desc,address,area,price,uname,htype,decorations,floor);    async.series({         user:(callback)=>{             searchUser(uname,callback)         },         htype:(callback)=>{             searchHtype(htype,callback)         },        decorations:(callback)=>{            searchDecorations(decorations,callback)        },        floor:(callback)=>{            serachFloor(floor,callback)        }     },(er,result)=>{         let house=new listIngModel({             title:title,             desc:desc,             address:address,             area:area,             price:price,             uname:result.user[0]._id,             htype:result.htype[0]._id,             decorations:result.decorations[0]._id,             floor: result.floor[0]._id         });         house.save((er)=>{             if(er){                 console.log("错误")             }         })         console.log(result)     })}function searchUser(name,callback){    userModel.find({uname:name},(er,result)=>{        callback(er,result)    });};function searchHtype(typeName,callback){    hTypeModel.find({typeName:typeName},(er,result)=>{        callback(er,result)    })};function searchDecorations(decoration,callback){    decorationModel.find({decoration:decoration},(er,result)=>{        callback(er,result)    })}function serachFloor(floor,callback){    floorModel.find({floor:floor},(er,result)=>{        callback(er,result)    })}function run(){    var floor=["顶层","低楼层","高楼层","底层","中楼层"];    var decoration=["模胚房","精装修","普通装修"];    var htype=["一室","四室","五室","两室","三室"];    var address=["安贞 国典华园 · 距离地铁安贞门458米", "宋家庄 政馨园三区 · 距离地铁宋家庄254米", "右安门内 未来花园 · 距离地铁陶然亭638米", "刘家窑 南三环东路 · 距离地铁刘家窑389米", "德胜门 普天大院 · 距离地铁积水潭538米", "永定门 景泰嘉园 · 距离地铁景泰170米", "双桥 东柳西里 · 距离地铁双桥910米", "九棵树(家乐福) 中泽雅园", "回龙观 流星花园三区 · 距离地铁平西府929米", "右安门外 玉林里", "右安门内 白纸坊西街6号院 · 距离地铁陶然亭1019米", "欢乐谷 世纪东方城 · 距离地铁南楼梓庄619米", "立水桥 溪城家园1号院 · 距离地铁立水桥南1255米", "西直门 时代之光 · 距离地铁西直门900米", "玉桥 幸福艺居", "甘家口 三里河路5号院 · 距离地铁白石桥南437米", "安定门 安德路59号楼 · 距离地铁鼓楼大街517米", "知春路 知春时代 · 距离地铁知春路279米", "垡头 垡头北里 · 距离地铁欢乐谷景区1096米", "九棵树(家乐福) 靓景明居 · 距离地铁果园1351米", "小西天 西直门铁路危改小区 · 距离地铁西直门430米", "二里庄 石油大院 · 距离地铁北沙滩791米", "清河 永泰东里 · 距离地铁永泰庄408米", "天通苑 天通苑中苑 · 距离地铁天通苑1272米", "惠新西街 惠新里 · 距离地铁惠新西街南口502米", "酒仙桥 酒仙桥一街坊 · 距离地铁将台705米", "紫竹桥 紫竹院南路4号院 · 距离地铁白石桥南740米", "草桥 恋日嘉园二期 · 距离地铁草桥268米", "枣园 中建国际港 · 距离地铁枣园198米", "崇文门 新怡家园 · 距离地铁崇文门387米"];    var desc=["2 室 2 厅 · 112 平米 · 南 · 中楼层/18层 · 精装", "1 室 1 厅 · 65 平米 · 北 · 中楼层/22层 · 精装", "3 室 2 厅 · 158 平米 · 西南 · 低楼层/22层 · 精装", "2 室 1 厅 · 62 平米 · 东北 · 顶层/18层 · 中装", "2 室 1 厅 · 55.8 平米 · 东北 · 中楼层/9层 · 精装", "3 室 1 厅 · 104 平米 · 西南 · 中楼层/11层 · 精装", "2 室 0 厅 · 60 平米 · 南北 · 低楼层/5层 · 简装", "2 室 1 厅 · 64 平米 · 南 · 中楼层/6层 · 中装", "1 室 1 厅 · 57 平米 · 北 · 底层/11层 · 精装", "2 室 1 厅 · 52.1 平米 · 西南 · 顶层/6层 · 中装", "1 室 1 厅 · 40.95 平米 · 南 · 中楼层/6层 · 精装", "1 室 1 厅 · 60 平米 · 北 · 高楼层/21层 · 精装", "1 室 1 厅 · 64.13 平米 · 西 · 中楼层/15层 · 中装", "1 室 1 厅 · 40 平米 · 西 · 低楼层/19层 · 中装", "1 室 0 厅 · 47 平米 · 东西 · 顶层/7层 · 简装", "1 室 1 厅 · 45 平米 · 东 · 中楼层/18层 · 精装", "1 室 1 厅 · 43.6 平米 · 南 · 顶层/6层 · 中装", "2 室 1 厅 · 102 平米 · 南北 · 高楼层/30层 · 精装", "2 室 1 厅 · 78 平米 · 南北 · 高楼层/6层 · 精装", "2 室 1 厅 · 89 平米 · 南北 · 中楼层/12层 · 中装", "3 室 1 厅 · 94 平米 · 东西 · 高楼层/9层 · 精装", "2 室 1 厅 · 95 平米 · 南北 · 中楼层/16层 · 精装", "1 室 1 厅 · 47 平米 · 东 · 中楼层/6层 · 简装", "3 室 2 厅 · 160 平米 · 南北 · 高楼层/15层 · 精装", "3 室 1 厅 · 85 平米 · 东南 · 中楼层/20层 · 中装", "2 室 1 厅 · 75 平米 · 南北 · 底层/6层 · 精装", "1 室 1 厅 · 58 平米 · 南北 · 低楼层/5层 · 精装", "2 室 2 厅 · 103 平米 · 西南 · 高楼层/18层 · 精装", "3 室 2 厅 · 125 平米 · 南北 · 中楼层/34层 · 精装", "2 室 1 厅 · 138 平米 · 南北 · 高楼层/15层 · 豪装"];    var title=["惠新 安贞 国典华园 精装朝南两居室有钥匙随时看房", "小区对面是地铁 政馨园三区正规一居室唯一 一套在租房", "未来花园 精装大三居室看房方便拎包入住", "南三环东路 东南两居室 看房有钥匙 下楼就是地铁站", "德胜门 小西天 普天大院电梯", "安乐林路景-泰嘉园精装三居室。看房随时", "东柳西里 南北通透 正规小两居 随时看", "超鸡好房！中泽雅园，拎包入住，", "流星花园三区 一居室 八号线上", "右安门 玉林里小区 南北通透两居室 业主直租 看房有钥匙", "精装一居 临近地铁 采光好 家电齐全 拎包入住", "欢乐谷 七号线南楼梓庄站随时拎包入住 集中供暖", "立水桥 溪城家园大YI居 交通便利 看房方便", "西直门地铁 凯德大厦天兆家园旁 一居有钥匙", "通州玉桥 幸福艺居 开间 看房随时 超值", "带电梯 中间层 精装一居 家具家电齐全 有钥匙", "鼓楼大街地铁旁 安德路朝南一居室 长租", "北航 知春路碧兴园 空房两居 看房随时", "垡头北里 南北通透户型 正规两居室 可长签 有钥匙随时看房", "果园地铁八通线 广渠路靓景明居", "德胜门 西直门 时代之光金晖嘉园远洋风景两居居出租有钥匙", "石油大院新楼，青年园，大两居室，看房方便", "永泰庄地铁新上一居室干净整洁便宜出租看房有钥匙", "天通苑中苑 双卫三居 整租", "惠新里业主直租三居 电梯带客厅南口5/10号线地铁", "酒仙桥，一街坊，晶都国际，颐堤港，将台地铁站", "白石桥南 理工附 整租 安静不临街，紫竹院公园", "草桥恋日嘉园二期精装两居室拎包入住", "中建国际港精装大三居业主自住拎包入住", "崇文门+磁器口+新怡家园，精装修两居室"];//for(let i=0;i<60;i++){    saveHouse(        title[Math.round(Math.random()*29)],        desc[Math.round(Math.random()*(desc.length-1))],        address[Math.round(Math.random()*29)],        (Math.random()*100).toFixed(2),        Math.round(Math.random()*10000),        nickname[Math.round(Math.random()*43)],        htype[Math.round(Math.random()*4)],        decoration[Math.round(Math.random()*2)],        floor[Math.round(Math.random()*4)]    );}    // async.series([        // ()=>{saveHtype();},        // ()=>{saveFloor();},        // ()=>{saveDecoration();},        // (callback)=>{saveCity();callback()},        // (callback)=>{saveCounty();callback()},        // (callback)=>{saveUser();callback()}        // (callback)=>{        //     saveHouse(        //         title[Math.round(Math.random()*10)],        //         desc[Math.round(Math.random()*6)],        //         address[Math.round(Math.random()*5)],        //         (Math.random()*100).toFixed(2),        //         Math.round(Math.random()*10000),        //         user[Math.round(Math.random()*6)],        //         htype[Math.round(Math.random()*5)],        //         decoration[Math.round(Math.random()*2)],        //         floor[Math.round(Math.random()*5)]        //     );        //     callback();        // },    // ],(err)=>{    //     if(err){    //    //         console.log(err)    //     }    // });}// run();